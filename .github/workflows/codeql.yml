# .github/workflows/codeql-analysis.yml
name: "CodeQL Security Scan"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '30 5 * * 1' 
  workflow_dispatch: # Permite rodar manualmente tamb√©m

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ubuntu-latest
    
    permissions:
      security-events: write
      actions: read      
      contents: read     
      packages: read     

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: 'actions'
            build-mode: 'none'
          - language: 'c-cpp'
            build-mode: 'manual' # Changed to manual
          - language: 'python'
            build-mode: 'none'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        queries: +security-and-quality

    # Manual build step for C++
    - if: matrix.language == 'c-cpp' && matrix.build-mode == 'manual'
      name: Manual C++ build for CodeQL
      shell: bash
      run: |
        echo "Running manual C++ build for CodeQL analysis..."
        echo "Working directory: $(pwd)"
        
        echo "Listing contents of data_analyzer/ (for lunaris_data_analyzer.cpp):"
        ls -la data_analyzer || echo "data_analyzer/ directory not found or lunaris_data_analyzer.cpp is missing."
        
        echo "Listing contents of text_cleaner/ (for lunaris_text_cleaner.cpp):"
        ls -la text_cleaner || echo "text_cleaner/ directory not found or lunaris_text_cleaner.cpp is missing."

        echo "Compiling lunaris_data_analyzer..."
        # Compile from data_analyzer directory, output there or in a build dir
        (cd data_analyzer && g++ lunaris_data_analyzer.cpp -o lda_ql_build -std=c++17 -g)
        
        echo "Compiling lunaris_text_cleaner..."
        # Compile from text_cleaner directory, output there or in a build dir
        (cd text_cleaner && g++ lunaris_text_cleaner.cpp -o ltc_ql_build -std=c++17 -g)
        
        echo "Manual C++ build commands completed."

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
